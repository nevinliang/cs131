For #1-4, I began coding the functions with lots of recursion (through a list). After I finished all, I realized a majority could be reduced through List.* functions. #6-8 were pretty intuitive. The way I began #9 was to trace out the problem recursively in a tree format on paper for the example problems. The problem mentioned that "it is fine for filter_blind_alleys to use equal_sets and computed_fixed_point." The main problem was figuring out which nonterminal symbols could lead to terminal ones. I had to find all of them, but once I found one, it would change the all other symbol's ability to reach termination. Thus, after finding every new nonterminal symbol that could reach termination I had to run this task again and again until my set of nonterminal symbols that could reach termination did not get bigger (and then I would be done). This could be done with fixed_point as long as my `eq` condition was testing if the set of nonterminal symbols stayed the same or increased.